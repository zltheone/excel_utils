package com.zl.excelutils.domain;

import java.util.HashMap;
import java.util.Map;

public enum ContentType {
    AI("application/vnd.adobe.illustrator", "ai", new String[0]),
    AIFF("audio/x-aiff", "aiff", new String[]{"aif", "aiff", "aifc"}),
    APPLE_QUICKTIME_IMAGE("image/x-quicktime", (String) null, new String[0]),
    APPLE_QUICKTIME_MOVIE("video/quicktime", "quicktime", new String[]{"qt", "mov"}),
    ARC("application/x-arc", "arc", new String[]{"arc"}),
    AUDIO_MPEG("audio/mpeg", "mpeg", new String[]{"mpga", "mp2", "mp2a", "mp3", "m2a", "m3a"}),
    AVI("video/x-msvideo", "avi", new String[]{"avi"}),
    AWK("text/x-awk", "awk", new String[]{"awk"}),
    BINHEX("application/mac-binhex40", "binhex", new String[]{"hqx"}),
    BITTORRENT("application/x-bittorrent", "bittorrent", new String[]{"torrent"}),
    BMP("image/x-ms-bmp", "bmp", new String[]{"bmp"}),
    BZIP2("application/x-bzip2", "bzip2", new String[]{"bz2", "boz"}),
    COMPRESS("application/x-compress", "compress", new String[]{"Z"}),
    COREL_DRAW("image/x-coreldraw", "corel-draw", new String[0]),
    CORE_DUMP("application/x-coredump", "core-dump", new String[0]),
    CPIO("application/x-cpio", "cpio", new String[]{"cpio"}),
    DBM("application/x-dbm", "dbm", new String[0]),
    DEBIAN_PACKAGE("application/x-debian-package", "debian-pkg", new String[]{"pkg", "deb", "udeb"}),
    DIFF("text/x-diff", "diff", new String[]{"diff"}),
    DVI("application/x-dvi", "dvi", new String[]{"dvi"}),
    FITS("application/fits", "fits", new String[]{"fits"}),
    FLASH("application/x-shockwave-flash", "flash", new String[]{"swf"}),
    FLASH_VIDEO("video/x-flv", "flash-video", new String[]{"flv"}),
    FORTRAN("text/x-fortran", "fortran", new String[]{"f", "for", "f77", "f90"}),
    FRAMEMAKER("application/x-mif", "framemaker", new String[]{"fm", "frame", "maker", "book"}),
    GAWK("text/x-gawk", "gawk", new String[]{"gawk"}),
    GDBM("application/x-gdbm", "gdbm", new String[0]),
    GIF("image/gif", "gif", new String[]{"gif"}),
    GNUMERIC("application/x-gnumeric", "gnumeric", new String[0]),
    GNUPG_KEYRING("application/x-gnupg-keyring", "gnupg-keyring", new String[0]),
    GNU_INFO("text/x-info", "gnu-info", new String[]{"info"}),
    GZIP("application/x-gzip", "gzip", new String[]{"gz"}),
    H264("video/h264", "h264", new String[]{"h264"}),
    HTML("text/html", "html", new String[]{"html", "htm"}),
    ICO("image/x-ico", "ico", new String[]{"ico"}),
    ISO_9660("application/x-iso9660-image", "iso9660", new String[]{"iso"}),
    JAVA_APPLET("application/x-java-applet", "applet", new String[0]),
    JAVA_KEYSTORE("application/x-java-keystore", "java-keystore", new String[0]),
    JPEG("image/jpeg", "jpeg", new String[]{"jpeg", "jpg", "jpe"}),
    JPEG_2000("image/jp2", "jp2", new String[]{"jp2"}),
    LHA("application/x-lha", "lha", new String[]{"lha", "lzh"}),
    LISP("text/x-lisp", "lisp", new String[]{"lisp"}),
    LOTUS_123("application/x-123", "lotus-123", new String[]{"123"}),
    MICROSOFT_ACCESS("application/x-msaccess", "access", new String[]{"mdb"}),
    MICROSOFT_EXCEL("application/vnd.ms-excel", "excel", new String[]{"xls", "xlm", "xla", "xlc", "xlt", "xlw", "xlsx"}),
    MICROSOFT_WORD("application/msword", "word", new String[]{"doc", "dot", "docx"}),
    MICROSOFT_OFFICE("application/vnd.openxmlformats-officedocument", "office", new String[0]),
    MIDI("audio/midi", "midi", new String[]{"mid", "midi", "kar", "rmi"}),
    MNG("video/x-mng", "mng", new String[]{"mng"}),
    MP4A("video/mp4", "mp4a", new String[]{"mp4", "mp4a", "mpg4"}),
    MP4V("video/mp4v-es", "mp4v", new String[]{"mp4v"}),
    NAWK("text/x-nawk", "nawk", new String[]{"nawk"}),
    NEWS("message/news", "news", new String[0]),
    OGG("application/ogg", "ogg", new String[]{"ogg", "oga", "spx"}),
    PBM("image/x-portable-bitmap", "pbm", new String[]{"pbm"}),
    PDF("application/pdf", "pdf", new String[]{"pdf"}),
    PERL("text/x-perl", "perl", new String[]{"pl"}),
    PGM("image/x-portable-greymap", "pgm", new String[]{"pgm"}),
    PGP("application/pgp-encrypted", "pgp", new String[]{"pgp"}),
    PGP_KEYRING("application/x-pgp-keyring", "pgp-keyring", new String[0]),
    PGP_SIGNATURE("application/pgp-signature", "pgp-signature", new String[0]),
    PHOTOSHOP("image/vnd.adobe.photoshop", "photoshop", new String[]{"psd"}),
    PHP("text/x-php", "php", new String[]{"php"}),
    PNG("image/png", "png", new String[]{"png"}),
    POSTSCRIPT("application/postscript", "postscript", new String[]{"ps", "eps"}),
    PPM("image/x-portable-pixmap", "ppm", new String[]{"ppm"}),
    RAR("application/x-rar", "rar", new String[]{"rar"}),
    REAL_AUDIO("audio/x-pn-realaudio", "real-audio", new String[]{"ram", "ra"}),
    REAL_MEDIA("application/vnd.rn-realmedia", "real-media", new String[]{"rm"}),
    MIME("message/rfc822", "mime", new String[]{"eml", "mime"}),
    RPM("application/x-rpm", "rpm", new String[]{"rpm"}),
    RTF("text/rtf", "rtf", new String[]{"rtf"}),
    SHARED_LIBRARY("application/x-sharedlib", "shared-lib", new String[0]),
    SHELL_SCRIPT("text/x-shellscript", "shell-script", new String[]{"sh"}),
    STUFFIT("application/x-stuffit", "stuffit", new String[]{"sit"}),
    SVG("image/svg+xml", "svg", new String[]{"svg", "svgz"}),
    TAR("application/x-tar", "tar", new String[]{"tar"}),
    TEX("text/x-tex", "tex", new String[]{"tex"}),
    TEXINFO("text/x-texinfo", "texinfo", new String[]{"texinfo", "texi"}),
    TIFF("image/tiff", "tiff", new String[]{"tiff", "tif"}),
    TROFF("text/troff", "troff", new String[]{"t", "tr", "roff", "man", "me", "ms"}),
    VCARD("text/x-vcard", "vcard", new String[]{"vcf"}),
    VIDEO_MPEG("video/mpeg", "mpeg", new String[]{"mpeg", "mpg", "mpe", "m1v", "m2v"}),
    VRML("model/vrml", "vrml", new String[]{"wrl", "vrml"}),
    WAV("audio/x-wav", "wav", new String[]{"wav"}),
    X3D("model/x3d", "x3d", new String[]{"x3d", "x3dz"}),
    XML("application/xml", "xml", new String[]{"xml", "xsl"}),
    ZIP("application/zip", "zip", new String[]{"zip"}),
    ZOO("application/x-zoo", "zoo", new String[]{"zoo"}),
    ANDREW_INSERT("application/andrew-inset", "andrew-insert", new String[]{"ez"}),
    APPLIXWARE("application/applixware", "applixware", new String[]{"aw"}),
    ATOM("application/atom+xml", "atom", new String[]{"atom"}),
    CU_SEEME("application/cu-seeme", "cu-seeme", new String[]{"cu"}),
    DOCBOOK("application/docbook+xml", "docbook", new String[]{"dbk"}),
    DSSC("application/dssc+der", "dssc", new String[]{"dssc"}),
    ECMA_SCRIPT("application/ecmascript", "ecma", new String[]{"ecma"}),
    EMMA("application/emma+xml", "emma", new String[]{"emma"}),
    EPUB("application/epub+zip", "epub", new String[]{"epub"}),
    EXI("application/exi", "exi", new String[]{"exi"}),
    FONT_TDPFR("application/font-tdpfr", "pfr", new String[]{"pfr"}),
    GML("application/gml+xml", "gml", new String[]{"gml"}),
    GPX("application/gpx+xml", "gpx", new String[]{"gpx"}),
    GXF("application/gxf", "gxf", new String[]{"gxf"}),
    HYPER_STUDIO("application/hyperstudio", "hyper-studio", new String[]{"stk"}),
    INKML("application/inkml+xml", "inkml", new String[]{"ink", "inkml"}),
    IPFIX("application/ipfix", "ipfix", new String[]{"ipfix"}),
    JAVA_ARCHIVE("application/java-archive", "java-archive", new String[]{"jar"}),
    JAVA_SERIALIZED("application/java-serialized-object", "java-serialized", new String[]{"ser"}),
    JAVA_CLASS("application/java-vm", "java-class", new String[]{"class"}),
    JAVASCRIPT("application/javascript", "javascript", new String[]{"js"}),
    JSON("application/json", "json", new String[]{"json"}),
    JSON_ML("application/jsonml+json", "jsonml", new String[]{"jsonml"}),
    LOST_XML("application/lost+xml", "lostxml", new String[]{"lostxml"}),
    COMPACT_PRO("application/mac-compactpro", "compact-pro", new String[]{"cpt"}),
    MADS("application/mads+xml", "mads", new String[]{"mads"}),
    MARC("application/marc", "marc", new String[]{"mrc"}),
    MARC_XML("application/marcxml+xml", "marc-xml", new String[]{"mrcx"}),
    MATHEMATICA("application/mathematica", "mathematica", new String[]{"ma", "nb", "mb"}),
    MATH_ML("application/mathml+xml", "mathml", new String[]{"mathml"}),
    MBOX("application/mbox", "mbox", new String[]{"mbox"}),
    META4("application/metalink4+xml", "meta4", new String[]{"meta4"}),
    METS("application/mets+xml", "mets", new String[]{"mets"}),
    MODS("application/mods+xml", "mods", new String[]{"mods"}),
    MP21("application/mp21", "mp21", new String[]{"m21", "mp21"}),
    MXF("application/mxf", "mxf", new String[]{"mxf"}),
    ODA("application/oda", "oda", new String[]{"oda"}),
    OEBPS_PACKAGE("application/oebps-package+xml", "oebps-package", new String[]{"opf"}),
    OMDOC("application/omdoc+xml", "omdoc", new String[]{"omdoc"}),
    ONE_NOTE("application/onenote", "one-note", new String[]{"onetoc", "onetoc2", "onetmp", "onepkg"}),
    OXPS("application/oxps", "oxps", new String[]{"oxps"}),
    PICS_RULES("application/pics-rules", "pics-rules", new String[]{"prf"}),
    PKCS10("application/pkcs10", "pkcs10", new String[]{"p10"}),
    PKCS7_MIME("application/pkcs7-mime", "pkcs7-mime", new String[]{"p7m", "p7c"}),
    PKCS7_SIGNATURE("application/pkcs7-signature", "pkcs7-signature", new String[]{"p7s"}),
    PKCS8("application/pkcs8", "pkcs8", new String[]{"p8"}),
    PKIX_ATTR_CERT("application/pkix-attr-cert", "ac", new String[]{"ac"}),
    PKIX_CERT("application/pkix-cert", "pkix-cert", new String[]{"cer"}),
    PKIX_CRL("application/pkix-crl", "pkix-crl", new String[]{"crl"}),
    PKIX_PKIPATH("application/pkix-pkipath", "pkix-pkipath", new String[]{"pkipath"}),
    PKIXCMP("application/pkixcmp", "pkixcmp", new String[]{"pki"}),
    PLS("application/pls+xml", "pls-xml", new String[]{"pls"}),
    PRS_CWW("application/prs.cww", "prs-cww", new String[]{"cww"}),
    PSKC("application/pskc+xml", "pskc", new String[]{"pskcxml"}),
    RDF("application/rdf+xml", "rdf", new String[]{"rdf"}),
    REGINFO("application/reginfo+xml", "reginfo", new String[]{"rif"}),
    RELAX_NG_COMPACT("application/relax-ng-compact-syntax", "relax-ng-compact", new String[]{"rnc"}),
    RESOURCE_LISTS("application/resource-lists+xml", "resource-lists", new String[]{"rl"}),
    RESOURCE_LISTS_DIFF("application/resource-lists-diff+xml", "resource-lists-diff", new String[]{"rld"}),
    RLS_SERVICES("application/rls-services+xml", "rls-services", new String[]{"rs"}),
    RPKI_GHOSTBUSTERS("application/rpki-ghostbusters", "rpki-ghostbusters", new String[]{"gbr"}),
    RPKI_MANIFEST("application/rpki-manifest", "rpki-manifest", new String[]{"mft"}),
    RPKI_ROA("application/rpki-roa", "rpki-roa", new String[]{"roa"}),
    RSD("application/rsd+xml", "rsd", new String[]{"rsd"}),
    RSS("application/rss+xml", "rss", new String[]{"rss"}),
    SBML("application/sbml+xml", "sbml", new String[]{"sbml"}),
    SCVP_CV_REQUEST("application/scvp-cv-request", "scvp-cv-request", new String[]{"scq"}),
    SCVP_CV_RESPONSE("application/scvp-cv-response", "scvp-cv-response", new String[]{"scs"}),
    SCVP_VP_REQUEST("application/scvp-vp-request", "scvp-vp-request", new String[]{"spq"}),
    SCVP_VP_RESPONSE("application/scvp-vp-response", "scvp-vp-response", new String[]{"spp"}),
    SDP("application/sdp", "sdp", new String[]{"sdp"}),
    SHF("application/shf+xml", "shf", new String[]{"shf"}),
    SMIL("application/smil+xml", "smil", new String[]{"smi", "smil"}),
    SPARQL_QUERY("application/sparql-query", "sparql-query", new String[]{"rq"}),
    SPARQL_RESULTS("application/sparql-results+xml", "sparql-results", new String[]{"srx"}),
    SRGS("application/srgs", "srgs", new String[]{"gram"}),
    SRGS_XML("application/srgs+xml", "srgs-xml", new String[]{"grxml"}),
    SRU("application/sru+xml", "sru", new String[]{"sru"}),
    SSDL("application/ssdl+xml", "ssdl", new String[]{"ssdl"}),
    SSML("application/ssml+xml", "ssml", new String[]{"ssml"}),
    TEI("application/tei+xml", "tei", new String[]{"tei"}),
    TFI("application/thraud+xml", "tfi", new String[]{"tfi"}),
    TIMESTAMPED_DATA("application/timestamped-data", "timestamped-data", new String[]{"tsd"}),
    PLB("application/vnd.3gpp.pic-bw-large", "plb", new String[]{"plb"}),
    PSB("application/vnd.3gpp.pic-bw-small", "psb", new String[]{"psb"}),
    PVB("application/vnd.3gpp.pic-bw-var", "pvb", new String[]{"pvb"}),
    TCAP("application/vnd.3gpp2.tcap", "tcap", new String[]{"tcap"}),
    PWN("application/vnd.3m.post-it-notes", "pwn", new String[]{"pwn"}),
    ASO("application/vnd.accpac.simply.aso", "aso", new String[]{"aso"}),
    IMP("application/vnd.accpac.simply.imp", "imp", new String[]{"imp"}),
    ACU("application/vnd.acucobol", "acu", new String[]{"acu"}),
    ACU_CORP("application/vnd.acucorp", "acu-corp", new String[]{"atc", "acutc"}),
    AIR("application/vnd.adobe.air-application-installer-package+zip", "air", new String[]{"air"}),
    FCDT("application/vnd.adobe.formscentral.fcdt", "fcdt", new String[]{"fcdt"}),
    ADOBE_FXP("application/vnd.adobe.fxp", "adobe-fxp", new String[]{"fxp", "fxpl"}),
    XDP("application/vnd.adobe.xdp+xml", "xdp", new String[]{"xdp"}),
    XFDF("application/vnd.adobe.xfdf", "xfdf", new String[]{"xfdf"}),
    AHEAD("application/vnd.ahead.space", "ahead", new String[]{"ahead"}),
    AZF("application/vnd.airzip.filesecure.azf", "azf", new String[]{"azf"}),
    AZS("application/vnd.airzip.filesecure.azs", "azs", new String[]{"azs"}),
    AZW("application/vnd.amazon.ebook", "azw", new String[]{"azw"}),
    ACC("application/vnd.americandynamics.acc", "acc", new String[]{"acc"}),
    AMI("application/vnd.amiga.ami", "ami", new String[]{"ami"}),
    APK("application/vnd.android.package-archive", "apk", new String[]{"apk"}),
    CII("application/vnd.anser-web-certificate-issue-initiation", "cii", new String[]{"cii"}),
    FTI("application/vnd.anser-web-funds-transfer-initiation", "fti", new String[]{"fti"}),
    ATX("application/vnd.antix.game-component", "atx", new String[]{"atx"}),
    MPKG("application/vnd.apple.installer+xml", "mpkg", new String[]{"mpkg"}),
    M3U8("application/vnd.apple.mpegurl", "m3u8", new String[]{"m3u8"}),
    SWI("application/vnd.aristanetworks.swi", "swi", new String[]{"swi"}),
    IOTA("application/vnd.astraea-software.iota", "iota", new String[]{"iota"}),
    AEP("application/vnd.audiograph", "aep", new String[]{"aep"}),
    MPM("application/vnd.blueice.multipass", "mpm", new String[]{"mpm"}),
    BMI("application/vnd.bmi", "bmi", new String[]{"bmi"}),
    REP("application/vnd.businessobjects", "rep", new String[]{"rep"}),
    CDXML("application/vnd.chemdraw+xml", "cdxml", new String[]{"cdxml"}),
    MMD("application/vnd.chipnuts.karaoke-mmd", "mmd", new String[]{"mmd"}),
    CDY("application/vnd.cinderella", "cdy", new String[]{"cdy"}),
    CLA("application/vnd.claymore", "cla", new String[]{"cla"}),
    RP9("application/vnd.cloanto.rp9", "rp9", new String[]{"rp9"}),
    CLONK_C4GROUP("application/vnd.clonk.c4group", "clonk-c4group", new String[]{"c4g", "c4d", "c4f", "c4p", "c4u"}),
    C11AMC("application/vnd.cluetrust.cartomobile-config", "c11amc", new String[]{"c11amc"}),
    C11AMZ("application/vnd.cluetrust.cartomobile-config-pkg", "c11amz", new String[]{"c11amz"}),
    CSP("application/vnd.commonspace", "csp", new String[]{"csp"}),
    CDBCMSG("application/vnd.contact.cmsg", "cdbcmsg", new String[]{"cdbcmsg"}),
    CMC("application/vnd.cosmocaller", "cmc", new String[]{"cmc"}),
    CLKX("application/vnd.crick.clicker", "clkx", new String[]{"clkx"}),
    CLKK("application/vnd.crick.clicker.keyboard", "clkk", new String[]{"clkk"}),
    CLKP("application/vnd.crick.clicker.palette", "clkp", new String[]{"clkp"}),
    CLKT("application/vnd.crick.clicker.template", "clkt", new String[]{"clkt"}),
    CLKW("application/vnd.crick.clicker.wordbank", "clkw", new String[]{"clkw"}),
    WBS("application/vnd.criticaltools.wbs+xml", "wbs", new String[]{"wbs"}),
    PML("application/vnd.ctc-posml", "pml", new String[]{"pml"}),
    PPD("application/vnd.cups-ppd", "ppd", new String[]{"ppd"}),
    CAR("application/vnd.curl.car", "car", new String[]{"car"}),
    PCURL("application/vnd.curl.pcurl", "pcurl", new String[]{"pcurl"}),
    DART("application/vnd.dart", "dart", new String[]{"dart"}),
    RDZ("application/vnd.data-vision.rdz", "rdz", new String[]{"rdz"}),
    DECE_DATA("application/vnd.dece.data", "dece-data", new String[]{"uvf", "uvvf", "uvd", "uvvd"}),
    DECE_TTML("application/vnd.dece.ttml+xml", "dece-ttml", new String[]{"uvt uvvt"}),
    DECE_UNSPECIFIED("application/vnd.dece.unspecified", "dece-unspecified", new String[]{"uvx uvvx"}),
    DECE_ZIP("application/vnd.dece.zip", "dece-zip", new String[]{"uvz", "uvvz"}),
    FE_LAUNCH("application/vnd.denovo.fcselayout-link", "fe_launch", new String[]{"fe_launch"}),
    DNA("application/vnd.dna", "dna", new String[]{"dna"}),
    MLP("application/vnd.dolby.mlp", "mlp", new String[]{"mlp"}),
    DPG("application/vnd.dpgraph", "dpg", new String[]{"dpg"}),
    DFAC("application/vnd.dreamfactory", "dfac", new String[]{"dfac"}),
    KPXX("application/vnd.ds-keypoint", "kpxx", new String[]{"kpxx"}),
    AIT("application/vnd.dvb.ait", "ait", new String[]{"ait"}),
    SVC("application/vnd.dvb.service", "svc", new String[]{"svc"}),
    GEO("application/vnd.dynageo", "geo", new String[]{"geo"}),
    MAG("application/vnd.ecowin.chart", "mag", new String[]{"mag"}),
    NML("application/vnd.enliven", "nml", new String[]{"nml"}),
    ESF("application/vnd.epson.esf", "esf", new String[]{"esf"}),
    MSF("application/vnd.epson.msf", "msf", new String[]{"msf"}),
    QAM("application/vnd.epson.quickanime", "qam", new String[]{"qam"}),
    SLT("application/vnd.epson.salt", "slt", new String[]{"slt"}),
    SSF("application/vnd.epson.ssf", "ssf", new String[]{"ssf"}),
    ESZIGNO3("application/vnd.eszigno3+xml", "eszigno3", new String[]{"es3", "et3"}),
    EZ2("application/vnd.ezpix-album", "ez2", new String[]{"ez2"}),
    EZ3("application/vnd.ezpix-package", "ez3", new String[]{"ez3"}),
    FDF("application/vnd.fdf", "fdf", new String[]{"fdf"}),
    MSEED("application/vnd.fdsn.mseed", "mseed", new String[]{"mseed"}),
    FDSN_SEED("application/vnd.fdsn.seed", "fdns-seed", new String[]{"seed"}),
    GPH("application/vnd.flographit", "gph", new String[]{"gph"}),
    FTC("application/vnd.fluxtime.clip", "ftc", new String[]{"ftc"}),
    FNC("application/vnd.frogans.fnc", "fnc", new String[]{"fnc"}),
    LTF("application/vnd.frogans.ltf", "ltf", new String[]{"ltf"}),
    FSC("application/vnd.fsc.weblaunch", "fsc", new String[]{"fsc"}),
    OAS("application/vnd.fujitsu.oasys", "oas", new String[]{"oas"}),
    OA2("application/vnd.fujitsu.oasys2", "oa2", new String[]{"oa2"}),
    OA3("application/vnd.fujitsu.oasys3", "oa3", new String[]{"oa3"}),
    FG5("application/vnd.fujitsu.oasysgp", "fg5", new String[]{"fg5"}),
    BH2("application/vnd.fujitsu.oasysprs", "bh2", new String[]{"bh2"}),
    DDD("application/vnd.fujixerox.ddd", "ddd", new String[]{"ddd"}),
    XDW("application/vnd.fujixerox.docuworks", "xdw", new String[]{"xdw"}),
    XBD("application/vnd.fujixerox.docuworks.binder", "xbd", new String[]{"xbd"}),
    FZS("application/vnd.fuzzysheet", "fzs", new String[]{"fzs"}),
    TXD("application/vnd.genomatix.tuxedo", "txd", new String[]{"txd"}),
    GGB("application/vnd.geogebra.file", "ggb", new String[]{"ggb"}),
    GGT("application/vnd.geogebra.tool", "ggt", new String[]{"ggt"}),
    GEOMETRY_EXPLORER("application/vnd.geometry-explorer", "geometry-explorer", new String[]{"gex gre"}),
    GXT("application/vnd.geonext", "gxt", new String[]{"gxt"}),
    G2W("application/vnd.geoplan", "g2w", new String[]{"g2w"}),
    G3W("application/vnd.geospace", "g3w", new String[]{"g3w"}),
    GMX("application/vnd.gmx", "gmx", new String[]{"gmx"}),
    KML("application/vnd.google-earth.kml+xml", "kml", new String[]{"kml"}),
    KMZ("application/vnd.google-earth.kmz", "kmz", new String[]{"kmz"}),
    GRAFEQ("application/vnd.grafeq", "grafeq", new String[]{"gqf gqs"}),
    GAC("application/vnd.groove-account", "gac", new String[]{"gac"}),
    GHF("application/vnd.groove-help", "ghf", new String[]{"ghf"}),
    GIM("application/vnd.groove-identity-message", "gim", new String[]{"gim"}),
    GRV("application/vnd.groove-injector", "grv", new String[]{"grv"}),
    GTM("application/vnd.groove-tool-message", "gtm", new String[]{"gtm"}),
    TPL("application/vnd.groove-tool-template", "tpl", new String[]{"tpl"}),
    VCG("application/vnd.groove-vcard", "vcg", new String[]{"vcg"}),
    HAL("application/vnd.hal+xml", "hal", new String[]{"hal"}),
    ZMM("application/vnd.handheld-entertainment+xml", "zmm", new String[]{"zmm"}),
    HBCI("application/vnd.hbci", "hbci", new String[]{"hbci"}),
    LES("application/vnd.hhe.lesson-player", "les", new String[]{"les"}),
    HPGL("application/vnd.hp-hpgl", "hpgl", new String[]{"hpgl"}),
    HPID("application/vnd.hp-hpid", "hpid", new String[]{"hpid"}),
    HPS("application/vnd.hp-hps", "hps", new String[]{"hps"}),
    JLT("application/vnd.hp-jlyt", "jlt", new String[]{"jlt"}),
    PCL("application/vnd.hp-pcl", "pcl", new String[]{"pcl"}),
    PCLXL("application/vnd.hp-pclxl", "pclxl", new String[]{"pclxl"}),
    HYDROSTATIX_SOF("application/vnd.hydrostatix.sof-data", "hydrostatix-sof", new String[]{"sfd-hdstx"}),
    MPY("application/vnd.ibm.minipay", "mpy", new String[]{"mpy"}),
    MODCAP("application/vnd.ibm.modcap", "modcap", new String[]{"afp", "listafp", "list3820"}),
    IRM("application/vnd.ibm.rights-management", "irm", new String[]{"irm"}),
    SC("application/vnd.ibm.secure-container", "sc", new String[]{"sc"}),
    ICC_PROFILE("application/vnd.iccprofile", "icc-profile", new String[]{"icc", "icm"}),
    IGL("application/vnd.igloader", "igl", new String[]{"igl"}),
    IVP("application/vnd.immervision-ivp", "ivp", new String[]{"ivp"}),
    IVU("application/vnd.immervision-ivu", "ivu", new String[]{"ivu"}),
    IGM("application/vnd.insors.igm", "igm", new String[]{"igm"}),
    INTERCON("application/vnd.intercon.formnet", "intercon", new String[]{"xpw", "xpx"}),
    I2G("application/vnd.intergeo", "i2g", new String[]{"i2g"}),
    QBO("application/vnd.intu.qbo", "qbo", new String[]{"qbo"}),
    QFX("application/vnd.intu.qfx", "qfx", new String[]{"qfx"}),
    RCPROFILE("application/vnd.ipunplugged.rcprofile", "rcprofile", new String[]{"rcprofile"}),
    IRP("application/vnd.irepository.package+xml", "irp", new String[]{"irp"}),
    XPR("application/vnd.is-xpr", "xpr", new String[]{"xpr"}),
    FCS("application/vnd.isac.fcs", "fcs", new String[]{"fcs"}),
    JAM("application/vnd.jam", "jam", new String[]{"jam"}),
    RMS("application/vnd.jcp.javame.midlet-rms", "rms", new String[]{"rms"}),
    JISP("application/vnd.jisp", "jisp", new String[]{"jisp"}),
    JODA("application/vnd.joost.joda-archive", "joda", new String[]{"joda"}),
    KAHOOTZ("application/vnd.kahootz", "kahootz", new String[]{"ktz", "ktr"}),
    KARBON("application/vnd.kde.karbon", "karbon", new String[]{"karbon"}),
    CHRT("application/vnd.kde.kchart", "chrt", new String[]{"chrt"}),
    KFO("application/vnd.kde.kformula", "kfo", new String[]{"kfo"}),
    FLW("application/vnd.kde.kivio", "flw", new String[]{"flw"}),
    KON("application/vnd.kde.kontour", "kon", new String[]{"kon"}),
    KDE_KPRESENTER("application/vnd.kde.kpresenter", "kde-kpresenter", new String[]{"kpr", "kpt"}),
    KSP("application/vnd.kde.kspread", "ksp", new String[]{"ksp"}),
    KDE_WORD("application/vnd.kde.kword", "kde-word", new String[]{"kwd", "kwt"}),
    HTKE("application/vnd.kenameaapp", "htke", new String[]{"htke"}),
    KIA("application/vnd.kidspiration", "kia", new String[]{"kia"}),
    KINAR("application/vnd.kinar", "kinar", new String[]{"kne", "knp"}),
    KOAN("application/vnd.koan", "koan", new String[]{"skp skd skt skm"}),
    SSE("application/vnd.kodak-descriptor", "sse", new String[]{"sse"}),
    LASXML("application/vnd.las.las+xml", "lasxml", new String[]{"lasxml"}),
    LBD("application/vnd.llamagraphics.life-balance.desktop", "lbd", new String[]{"lbd"}),
    LBE("application/vnd.llamagraphics.life-balance.exchange+xml", "lbe", new String[]{"lbe"}),
    APR("application/vnd.lotus-approach", "apr", new String[]{"apr"}),
    PRE("application/vnd.lotus-freelance", "pre", new String[]{"pre"}),
    NSF("application/vnd.lotus-notes", "nsf", new String[]{"nsf"}),
    ORG("application/vnd.lotus-organizer", "org", new String[]{"org"}),
    SCM("application/vnd.lotus-screencam", "scm", new String[]{"scm"}),
    LWP("application/vnd.lotus-wordpro", "lwp", new String[]{"lwp"}),
    PORTPKG("application/vnd.macports.portpkg", "portpkg", new String[]{"portpkg"}),
    MCD("application/vnd.mcd", "mcd", new String[]{"mcd"}),
    MC1("application/vnd.medcalcdata", "mc1", new String[]{"mc1"}),
    CDKEY("application/vnd.mediastation.cdkey", "cdkey", new String[]{"cdkey"}),
    MWF("application/vnd.mfer", "mwf", new String[]{"mwf"}),
    MFM("application/vnd.mfmp", "mfm", new String[]{"mfm"}),
    FLO("application/vnd.micrografx.flo", "flo", new String[]{"flo"}),
    IGX("application/vnd.micrografx.igx", "igx", new String[]{"igx"}),
    MIF("application/vnd.mif", "mif", new String[]{"mif"}),
    DAF("application/vnd.mobius.daf", "daf", new String[]{"daf"}),
    DIS("application/vnd.mobius.dis", "dis", new String[]{"dis"}),
    MBK("application/vnd.mobius.mbk", "mbk", new String[]{"mbk"}),
    MQY("application/vnd.mobius.mqy", "mqy", new String[]{"mqy"}),
    MSL("application/vnd.mobius.msl", "msl", new String[]{"msl"}),
    PLC("application/vnd.mobius.plc", "plc", new String[]{"plc"}),
    TXF("application/vnd.mobius.txf", "txf", new String[]{"txf"}),
    MPN("application/vnd.mophun.application", "mpn", new String[]{"mpn"}),
    MPC("application/vnd.mophun.certificate", "mpc", new String[]{"mpc"}),
    XUL("application/vnd.mozilla.xul+xml", "xul", new String[]{"xul"}),
    CIL("application/vnd.ms-artgalry", "cil", new String[]{"cil"}),
    CAB("application/vnd.ms-cab-compressed", "cab", new String[]{"cab"}),
    FONT_OBJECT("application/vnd.ms-fontobject", "font-object", new String[]{"eot"}),
    CHM("application/vnd.ms-htmlhelp", "chm", new String[]{"chm"}),
    IMS("application/vnd.ms-ims", "ims", new String[]{"ims"}),
    LRM("application/vnd.ms-lrm", "lrm", new String[]{"lrm"}),
    THMX("application/vnd.ms-officetheme", "thmx", new String[]{"thmx"}),
    CAT("application/vnd.ms-pki.seccat", "cat", new String[]{"cat"}),
    STL("application/vnd.ms-pki.stl", "stl", new String[]{"stl"}),
    MICROSOFT_POWERPOINT("application/vnd.ms-powerpoint", "powerpoint", new String[]{"ppt", "pps", "pot"}),
    PPAM("application/vnd.ms-powerpoint.addin.macroenabled.12", "ppam", new String[]{"ppam"}),
    PPTM("application/vnd.ms-powerpoint.presentation.macroenabled.12", "pptm", new String[]{"pptm"}),
    SLDM("application/vnd.ms-powerpoint.slide.macroenabled.12", "sldm", new String[]{"sldm"}),
    PPSM("application/vnd.ms-powerpoint.slideshow.macroenabled.12", "ppsm", new String[]{"ppsm"}),
    POTM("application/vnd.ms-powerpoint.template.macroenabled.12", "potm", new String[]{"potm"}),
    MICROSOFT_PROJECT("application/vnd.ms-project", "project", new String[]{"mpp", "mpt"}),
    DOCM("application/vnd.ms-word.document.macroenabled.12", "docm", new String[]{"docm"}),
    DOTM("application/vnd.ms-word.template.macroenabled.12", "dotm", new String[]{"dotm"}),
    MICROSOFT_WORKS("application/vnd.ms-works", "works", new String[]{"wps", "wks", "wcm", "wdb"}),
    WPL("application/vnd.ms-wpl", "wpl", new String[]{"wpl"}),
    XPS("application/vnd.ms-xpsdocument", "xps", new String[]{"xps"}),
    MSEQ("application/vnd.mseq", "mseq", new String[]{"mseq"}),
    MUS("application/vnd.musician", "mus", new String[]{"mus"}),
    MSTY("application/vnd.muvee.style", "msty", new String[]{"msty"}),
    TAGLET("application/vnd.mynfc", "taglet", new String[]{"taglet"}),
    NLU("application/vnd.neurolanguage.nlu", "nlu", new String[]{"nlu"}),
    NITF("application/vnd.nitf", "nitf", new String[]{"ntf", "nitf"}),
    NND("application/vnd.noblenet-directory", "nnd", new String[]{"nnd"}),
    NNS("application/vnd.noblenet-sealer", "nns", new String[]{"nns"}),
    NNW("application/vnd.noblenet-web", "nnw", new String[]{"nnw"}),
    NGDAT("application/vnd.nokia.n-gage.data", "ngdat", new String[]{"ngdat"}),
    N_GAGE("application/vnd.nokia.n-gage.symbian.install", "n-gage", new String[]{"n-gage"}),
    RPST("application/vnd.nokia.radio-preset", "rpst", new String[]{"rpst"}),
    RPSS("application/vnd.nokia.radio-presets", "rpss", new String[]{"rpss"}),
    EDM("application/vnd.novadigm.edm", "edm", new String[]{"edm"}),
    EDX("application/vnd.novadigm.edx", "edx", new String[]{"edx"}),
    EXT("application/vnd.novadigm.ext", "ext", new String[]{"ext"}),
    OPENDOCUMENT_CHART("application/vnd.oasis.opendocument.chart", "odc", new String[]{"odc"}),
    OPENDOCUMENT_CHART_TEMPLATE("application/vnd.oasis.opendocument.chart-template", "otc", new String[]{"otc"}),
    OPENDOCUMENT_DATABASE("application/vnd.oasis.opendocument.database", "odb", new String[]{"odb"}),
    OPENDOCUMENT_FORMULA("application/vnd.oasis.opendocument.formula", "odf", new String[]{"odf"}),
    OPENDOCUMENT_FORMULA_TEMPLATE("application/vnd.oasis.opendocument.formula-template", "odft", new String[]{"odft"}),
    OPENDOCUMENT_GRAPHICS("application/vnd.oasis.opendocument.graphics", "odg", new String[]{"odg"}),
    OPENDOCUMENT_GRAPHICS_TEMPLATE("application/vnd.oasis.opendocument.graphics-template", "otg", new String[]{"otg"}),
    OPENDOCUMENT_IMAGE("application/vnd.oasis.opendocument.image", "odi", new String[]{"odi"}),
    OPENDOCUMENT_IMAGE_TEMPLATE("application/vnd.oasis.opendocument.image-template", "oti", new String[]{"oti"}),
    OPENDOCUMENT_PRESENTATION("application/vnd.oasis.opendocument.presentation", "odp", new String[]{"odp"}),
    OPENDOCUMENT_PRESENTATION_TEMPLATE("application/vnd.oasis.opendocument.presentation-template", "otp", new String[]{"otp"}),
    OPENDOCUMENT_SPREADSHEET("application/vnd.oasis.opendocument.spreadsheet", "opendocument-spreadsheet", new String[]{"ods"}),
    OPENDOCUMENT_SPREADSHEET_TEMPLATE("application/vnd.oasis.opendocument.spreadsheet-template", "ots", new String[]{"ots"}),
    OPENDOCUMENT_TEXT("application/vnd.oasis.opendocument.text", "opendocument-text", new String[]{"odt"}),
    OPENDOCUMENT_TEXT_MASTER("application/vnd.oasis.opendocument.text-master", "opendocument-text-master", new String[]{"odm"}),
    OPENDOCUMENT_TEXT_TEMPLATE("application/vnd.oasis.opendocument.text-template", "opendocument-text-template", new String[]{"ott"}),
    OPENDOCUMENT_TEXT_WEB("application/vnd.oasis.opendocument.text-web", "opendocument-text-web", new String[]{"oth"}),
    XO("application/vnd.olpc-sugar", "xo", new String[]{"xo"}),
    DD2("application/vnd.oma.dd2+xml", "dd2", new String[]{"dd2"}),
    OXT("application/vnd.openofficeorg.extension", "oxt", new String[]{"oxt"}),
    MICROSOFT_POWERPOINT_XML("application/vnd.openxmlformats-officedocument.presentationml.presentation", "powerpoint", new String[]{"pptx"}),
    SLDX("application/vnd.openxmlformats-officedocument.presentationml.slide", "sldx", new String[]{"sldx"}),
    PPSX("application/vnd.openxmlformats-officedocument.presentationml.slideshow", "ppsx", new String[]{"ppsx"}),
    POTX("application/vnd.openxmlformats-officedocument.presentationml.template", "potx", new String[]{"potx"}),
    MICROSOFT_EXCEL_XML("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "excel", new String[]{"xlsx"}),
    XLTX("application/vnd.openxmlformats-officedocument.spreadsheetml.template", "xltx", new String[]{"xltx"}),
    MICROSOFT_WORD_XML("application/vnd.openxmlformats-officedocument.wordprocessingml.document", "word", new String[]{"docx"}),
    DOTX("application/vnd.openxmlformats-officedocument.wordprocessingml.template", "dotx", new String[]{"dotx"}),
    MGP("application/vnd.osgeo.mapguide.package", "mgp", new String[]{"mgp"}),
    DP("application/vnd.osgi.dp", "dp", new String[]{"dp"}),
    ESA("application/vnd.osgi.subsystem", "esa", new String[]{"esa"}),
    PALM("application/vnd.palm", "palm", new String[]{"pdb", "pqa", "oprc"}),
    PAW("application/vnd.pawaafile", "paw", new String[]{"paw"}),
    STR("application/vnd.pg.format", "str", new String[]{"str"}),
    EI6("application/vnd.pg.osasli", "ei6", new String[]{"ei6"}),
    EFIF("application/vnd.picsel", "efif", new String[]{"efif"}),
    WG("application/vnd.pmi.widget", "wg", new String[]{"wg"}),
    PLF("application/vnd.pocketlearn", "plf", new String[]{"plf"}),
    PBD("application/vnd.powerbuilder6", "pbd", new String[]{"pbd"}),
    BOX("application/vnd.previewsystems.box", "box", new String[]{"box"}),
    MGZ("application/vnd.proteus.magazine", "mgz", new String[]{"mgz"}),
    QPS("application/vnd.publishare-delta-tree", "qps", new String[]{"qps"}),
    PTID("application/vnd.pvi.ptid1", "ptid", new String[]{"ptid"}),
    QUARK_XPRESS("application/vnd.quark.quarkxpress", "quark-xpress", new String[]{"qxd", "qxt", "qwd", "qwt", "qxl", "qxb"}),
    BED("application/vnd.realvnc.bed", "bed", new String[]{"bed"}),
    MXL("application/vnd.recordare.musicxml", "mxl", new String[]{"mxl"}),
    MUSICXML("application/vnd.recordare.musicxml+xml", "musicxml", new String[]{"musicxml"}),
    CRYPTONOTE("application/vnd.rig.cryptonote", "cryptonote", new String[]{"cryptonote"}),
    COD("application/vnd.rim.cod", "cod", new String[]{"cod"}),
    RMVB("application/vnd.rn-realmedia-vbr", "rmvb", new String[]{"rmvb"}),
    LINK66("application/vnd.route66.link66+xml", "link66", new String[]{"link66"}),
    ST("application/vnd.sailingtracker.track", "st", new String[]{"st"}),
    SEE("application/vnd.seemail", "see", new String[]{"see"}),
    SEMA("application/vnd.sema", "sema", new String[]{"sema"}),
    SEMD("application/vnd.semd", "semd", new String[]{"semd"}),
    SEMF("application/vnd.semf", "semf", new String[]{"semf"}),
    IFM("application/vnd.shana.informed.formdata", "ifm", new String[]{"ifm"}),
    ITP("application/vnd.shana.informed.formtemplate", "itp", new String[]{"itp"}),
    IIF("application/vnd.shana.informed.interchange", "iif", new String[]{"iif"}),
    IPK("application/vnd.shana.informed.package", "ipk", new String[]{"ipk"}),
    MIND_MAPPER("application/vnd.simtech-mindmapper", "mind-mapper", new String[]{"twd", "twds"}),
    MMF("application/vnd.smaf", "mmf", new String[]{"mmf"}),
    TEACHER("application/vnd.smart.teacher", "teacher", new String[]{"teacher"}),
    SOLENT("application/vnd.solent.sdkm+xml", "solent", new String[]{"sdkm", "sdkd"}),
    DXP("application/vnd.spotfire.dxp", "dxp", new String[]{"dxp"}),
    SFS("application/vnd.spotfire.sfs", "sfs", new String[]{"sfs"}),
    SDC("application/vnd.stardivision.calc", "sdc", new String[]{"sdc"}),
    SDA("application/vnd.stardivision.draw", "sda", new String[]{"sda"}),
    SDD("application/vnd.stardivision.impress", "sdd", new String[]{"sdd"}),
    SMF("application/vnd.stardivision.math", "smf", new String[]{"smf"}),
    STARDIVISION_WRITER("application/vnd.stardivision.writer", "stardivision-writer", new String[]{"sdw", "vor"}),
    STARDIVISION_WRITER_GLOBAL("application/vnd.stardivision.writer-global", "stardivision-writer-global", new String[]{"sgl"}),
    SMZIP("application/vnd.stepmania.package", "smzip", new String[]{"smzip"}),
    SM("application/vnd.stepmania.stepchart", "sm", new String[]{"sm"}),
    SXC("application/vnd.sun.xml.calc", "sxc", new String[]{"sxc"}),
    STC("application/vnd.sun.xml.calc.template", "stc", new String[]{"stc"}),
    SXD("application/vnd.sun.xml.draw", "sxd", new String[]{"sxd"}),
    STD("application/vnd.sun.xml.draw.template", "std", new String[]{"std"}),
    SXI("application/vnd.sun.xml.impress", "sxi", new String[]{"sxi"}),
    STI("application/vnd.sun.xml.impress.template", "sti", new String[]{"sti"}),
    SXM("application/vnd.sun.xml.math", "sxm", new String[]{"sxm"}),
    SXW("application/vnd.sun.xml.writer", "sxw", new String[]{"sxw"}),
    SXG("application/vnd.sun.xml.writer.global", "sxg", new String[]{"sxg"}),
    STW("application/vnd.sun.xml.writer.template", "stw", new String[]{"stw"}),
    SUS_CALENDAR("application/vnd.sus-calendar", "sus-calendar", new String[]{"sus", "susp"}),
    SVD("application/vnd.svd", "svd", new String[]{"svd"}),
    SYMBIAN("application/vnd.symbian.install", "symbian", new String[]{"sis", "sisx"}),
    XSM("application/vnd.syncml+xml", "xsm", new String[]{"xsm"}),
    BDM("application/vnd.syncml.dm+wbxml", "bdm", new String[]{"bdm"}),
    XDM("application/vnd.syncml.dm+xml", "xdm", new String[]{"xdm"}),
    TAO("application/vnd.tao.intent-module-archive", "tao", new String[]{"tao"}),
    TCPDUMP("application/vnd.tcpdump.pcap", "tcpdump", new String[]{"pcap", "cap", "dmp"}),
    TMO("application/vnd.tmobile-livetv", "tmo", new String[]{"tmo"}),
    TPT("application/vnd.trid.tpt", "tpt", new String[]{"tpt"}),
    MXS("application/vnd.triscape.mxs", "mxs", new String[]{"mxs"}),
    TRA("application/vnd.trueapp", "tra", new String[]{"tra"}),
    UFDL("application/vnd.ufdl", "ufdl", new String[]{"ufd", "ufdl"}),
    UTZ("application/vnd.uiq.theme", "utz", new String[]{"utz"}),
    UMJ("application/vnd.umajin", "umj", new String[]{"umj"}),
    UNITY("application/vnd.unity", "unity", new String[]{"unityweb"}),
    UOML("application/vnd.uoml+xml", "uoml", new String[]{"uoml"}),
    VCX("application/vnd.vcx", "vcx", new String[]{"vcx"}),
    VISIO("application/vnd.visio", "visio", new String[]{"vsd", "vst", "vss", "vsw"}),
    VIS("application/vnd.visionary", "vis", new String[]{"vis"}),
    VSF("application/vnd.vsf", "vsf", new String[]{"vsf"}),
    WBXML("application/vnd.wap.wbxml", "wbxml", new String[]{"wbxml"}),
    WMLC("application/vnd.wap.wmlc", "wmlc", new String[]{"wmlc"}),
    WMLSC("application/vnd.wap.wmlscriptc", "wmlsc", new String[]{"wmlsc"}),
    WTB("application/vnd.webturbo", "wtb", new String[]{"wtb"}),
    NBP("application/vnd.wolfram.player", "nbp", new String[]{"nbp"}),
    WPD("application/vnd.wordperfect", "wpd", new String[]{"wpd"}),
    WQD("application/vnd.wqd", "wqd", new String[]{"wqd"}),
    STF("application/vnd.wt.stf", "stf", new String[]{"stf"}),
    XAR("application/vnd.xara", "xar", new String[]{"xar"}),
    XFDL("application/vnd.xfdl", "xfdl", new String[]{"xfdl"}),
    HVD("application/vnd.yamaha.hv-dic", "hvd", new String[]{"hvd"}),
    HVS("application/vnd.yamaha.hv-script", "hvs", new String[]{"hvs"}),
    HVP("application/vnd.yamaha.hv-voice", "hvp", new String[]{"hvp"}),
    OSF("application/vnd.yamaha.openscoreformat", "osf", new String[]{"osf"}),
    OSFPVG("application/vnd.yamaha.openscoreformat.osfpvg+xml", "osfpvg", new String[]{"osfpvg"}),
    SAF("application/vnd.yamaha.smaf-audio", "saf", new String[]{"saf"}),
    SPF("application/vnd.yamaha.smaf-phrase", "spf", new String[]{"spf"}),
    CMP("application/vnd.yellowriver-custom-menu", "cmp", new String[]{"cmp"}),
    ZUL("application/vnd.zul", "zul", new String[]{"zir", "zirz"}),
    ZAZ("application/vnd.zzazz.deck+xml", "zaz", new String[]{"zaz"}),
    VXML("application/voicexml+xml", "vxml", new String[]{"vxml"}),
    WGT("application/widget", "wgt", new String[]{"wgt"}),
    HLP("application/winhlp", "hlp", new String[]{"hlp"}),
    WSDL("application/wsdl+xml", "wsdl", new String[]{"wsdl"}),
    WSPOLICY("application/wspolicy+xml", "wspolicy", new String[]{"wspolicy"}),
    SEVEN_Z("application/x-7z-compressed", "7zip", new String[]{"7z"}),
    ABIWORD("application/x-abiword", "abiword", new String[]{"abw"}),
    ACE("application/x-ace-compressed", "ace", new String[]{"ace"}),
    DMG("application/x-apple-diskimage", "dmg", new String[]{"dmg"}),
    AUTHORWARE("application/x-authorware-bin", "authorware", new String[]{"aab", "x32", "u32", "vox"}),
    AAM("application/x-authorware-map", "aam", new String[]{"aam"}),
    AAS("application/x-authorware-seg", "aas", new String[]{"aas"}),
    BCPIO("application/x-bcpio", "bcpio", new String[]{"bcpio"}),
    BLORB("application/x-blorb", "blb blorb", new String[]{"blb blorb"}),
    BZ("application/x-bzip", "bz", new String[]{"bz"}),
    CBR("application/x-cbr", "cbr", new String[]{"cbr", "cba", "cbt", "cbz", "cb7"}),
    VCD("application/x-cdlink", "vcd", new String[]{"vcd"}),
    CFS("application/x-cfs-compressed", "cfs", new String[]{"cfs"}),
    CHAT("application/x-chat", "chat", new String[]{"chat"}),
    PGN("application/x-chess-pgn", "pgn", new String[]{"pgn"}),
    NSC("application/x-conference", "nsc", new String[]{"nsc"}),
    CSH("application/x-csh", "csh", new String[]{"csh"}),
    DGC("application/x-dgc-compressed", "dgc", new String[]{"dgc"}),
    X_DIRCTOR("application/x-director", "x-director", new String[]{"dir", "dcr", "dxr", "cst", "cct", "cxt", "w3d", "fgd", "swa"}),
    WAD("application/x-doom", "wad", new String[]{"wad"}),
    NCX("application/x-dtbncx+xml", "ncx", new String[]{"ncx"}),
    DTB("application/x-dtbook+xml", "dtb", new String[]{"dtb"}),
    RES("application/x-dtbresource+xml", "res", new String[]{"res"}),
    EVY("application/x-envoy", "evy", new String[]{"evy"}),
    EVA("application/x-eva", "eva", new String[]{"eva"}),
    BDF("application/x-font-bdf", "bdf", new String[]{"bdf"}),
    GSF("application/x-font-ghostscript", "gsf", new String[]{"gsf"}),
    PSF("application/x-font-linux-psf", "psf", new String[]{"psf"}),
    OTF("application/x-font-otf", "otf", new String[]{"otf"}),
    PCF("application/x-font-pcf", "pcf", new String[]{"pcf"}),
    SNF("application/x-font-snf", "snf", new String[]{"snf"}),
    FONT_TTF("application/x-font-ttf", "font-ttf", new String[]{"ttf", "ttc"}),
    FONT_TYPE1("application/x-font-type1", "font-type1", new String[]{"pfa", "pfb", "pfm", "afm"}),
    WOFF("application/x-font-woff", "woff", new String[]{"woff"}),
    SPL("application/x-futuresplash", "spl", new String[]{"spl"}),
    GCA("application/x-gca-compressed", "gca", new String[]{"gca"}),
    ULX("application/x-glulx", "ulx", new String[]{"ulx"}),
    GRAMPS("application/x-gramps-xml", "gramps", new String[]{"gramps"}),
    GTAR("application/x-gtar", "gtar", new String[]{"gtar"}),
    HDF("application/x-hdf", "hdf", new String[]{"hdf"}),
    INSTALL("application/x-install-instructions", "install", new String[]{"install"}),
    JNLP("application/x-java-jnlp-file", "jnlp", new String[]{"jnlp"}),
    LATEX("application/x-latex", "latex", new String[]{"latex"}),
    MIE("application/x-mie", "mie", new String[]{"mie"}),
    MOBIPOCKET_EBOOK("application/x-mobipocket-ebook", "mobipocket-ebook", new String[]{"prc", "mobi"}),
    APPLICATION("application/x-ms-application", "application", new String[]{"application"}),
    LNK("application/x-ms-shortcut", "lnk", new String[]{"lnk"}),
    WMD("application/x-ms-wmd", "wmd", new String[]{"wmd"}),
    WMZ("application/x-ms-wmz", "wmz", new String[]{"wmz"}),
    XBAP("application/x-ms-xbap", "xbap", new String[]{"xbap"}),
    OBD("application/x-msbinder", "obd", new String[]{"obd"}),
    CRD("application/x-mscardfile", "crd", new String[]{"crd"}),
    CLP("application/x-msclip", "clp", new String[]{"clp"}),
    MICROSOFT_MONEY("application/x-msmoney", "money", new String[]{"mny"}),
    PUB("application/x-mspublisher", "pub", new String[]{"pub"}),
    SCD("application/x-msschedule", "scd", new String[]{"scd"}),
    TRM("application/x-msterminal", "trm", new String[]{"trm"}),
    MICROSOFT_WRITE("application/x-mswrite", "write", new String[]{"wri"}),
    NETCDF("application/x-netcdf", "netcdf", new String[]{"nc", "cdf"}),
    NZB("application/x-nzb", "nzb", new String[]{"nzb"}),
    PKCS12("application/x-pkcs12", "pkcs12", new String[]{"p12", "pfx"}),
    PKCS7_CERTIFICATES("application/x-pkcs7-certificates", "pkcs7-certificates", new String[]{"p7b", "spc"}),
    P7R("application/x-pkcs7-certreqresp", "p7r", new String[]{"p7r"}),
    RIS("application/x-research-info-systems", "ris", new String[]{"ris"}),
    SH("application/x-sh", "sh", new String[0]),
    SHAR("application/x-shar", "shar", new String[]{"shar"}),
    XAP("application/x-silverlight-app", "xap", new String[]{"xap"}),
    SQL("application/x-sql", "sql", new String[]{"sql"}),
    SITX("application/x-stuffitx", "sitx", new String[]{"sitx"}),
    SRT("application/x-subrip", "srt", new String[]{"srt"}),
    SV4CPIO("application/x-sv4cpio", "sv4cpio", new String[]{"sv4cpio"}),
    SV4CRC("application/x-sv4crc", "sv4crc", new String[]{"sv4crc"}),
    T3("application/x-t3vm-image", "t3", new String[]{"t3"}),
    GAM("application/x-tads", "gam", new String[]{"gam"}),
    TCL("application/x-tcl", "tcl", new String[]{"tcl"}),
    TFM("application/x-tex-tfm", "tfm", new String[]{"tfm"}),
    OBJ("application/x-tgif", "obj", new String[]{"obj"}),
    USTAR("application/x-ustar", "ustar", new String[]{"ustar"}),
    SRC("application/x-wais-source", "src", new String[]{"src"}),
    X509_CA_CERT("application/x-x509-ca-cert", "x509-ca-cert", new String[]{"der", "crt"}),
    XFIG("application/x-xfig", "xfig", new String[]{"fig"}),
    XLIFF("application/x-xliff+xml", "xliff", new String[]{"xlf"}),
    XP_INSTALL("application/x-xpinstall", "xp-install", new String[]{"xpi"}),
    XZ("application/x-xz", "xz", new String[]{"xz"}),
    ZMACHINE("application/x-zmachine", "zmachine", new String[]{"z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8"}),
    XAML("application/xaml+xml", "xaml", new String[]{"xaml"}),
    XDF("application/xcap-diff+xml", "xdf", new String[]{"xdf"}),
    XENC("application/xenc+xml", "xenc", new String[]{"xenc"}),
    XHTML("application/xhtml+xml", "xhtml", new String[]{"xhtml", "xht"}),
    DTD("application/xml-dtd", "dtd", new String[]{"dtd"}),
    XOP("application/xop+xml", "xop", new String[]{"xop"}),
    XPL("application/xproc+xml", "xpl", new String[]{"xpl"}),
    XSLT("application/xslt+xml", "xslt", new String[]{"xslt"}),
    XSPF("application/xspf+xml", "xspf", new String[]{"xspf"}),
    XV("application/xv+xml", "xv", new String[]{"mxml", "xhvml", "xvml", "xvm"}),
    YANG("application/yang", "yang", new String[]{"yang"}),
    YIN("application/yin+xml", "yin", new String[]{"yin"}),
    ADP("audio/adpcm", "adp", new String[]{"adp"}),
    SND("audio/basic", "audio-basic", new String[]{"au", "snd"}),
    S3M("audio/s3m", "s3m", new String[]{"s3m"}),
    SIL("audio/silk", "silk", new String[]{"sil"}),
    DECE_AUDIO("audio/vnd.dece.audio", "dece-audio", new String[]{"uva", "uvva"}),
    EOL("audio/vnd.digital-winds", "eol", new String[]{"eol"}),
    DRA("audio/vnd.dra", "dra", new String[]{"dra"}),
    DTS("audio/vnd.dts", "dts", new String[]{"dts"}),
    DTSHD("audio/vnd.dts.hd", "dtshd", new String[]{"dtshd"}),
    LVP("audio/vnd.lucent.voice", "lvp", new String[]{"lvp"}),
    PYA("audio/vnd.ms-playready.media.pya", "pya", new String[]{"pya"}),
    ECELP4800("audio/vnd.nuera.ecelp4800", "ecelp4800", new String[]{"ecelp4800"}),
    ECELP7470("audio/vnd.nuera.ecelp7470", "ecelp7470", new String[]{"ecelp7470"}),
    ECELP9600("audio/vnd.nuera.ecelp9600", "ecelp9600", new String[]{"ecelp9600"}),
    RIP("audio/vnd.rip", "rip", new String[]{"rip"}),
    WEBA("audio/webm", "weba", new String[]{"weba"}),
    AAC("audio/x-aac", "aac", new String[]{"aac"}),
    CAF("audio/x-caf", "caf", new String[]{"caf"}),
    FLAC("audio/x-flac", "flac", new String[]{"flac"}),
    MKA("audio/x-matroska", "mka", new String[]{"mka"}),
    M3U("audio/x-mpegurl", "m3u", new String[]{"m3u"}),
    WAX("audio/x-ms-wax", "wax", new String[]{"wax"}),
    WMA("audio/x-ms-wma", "wma", new String[]{"wma"}),
    RMP("audio/x-pn-realaudio-plugin", "rmp", new String[]{"rmp"}),
    XM("audio/xm", "xm", new String[]{"xm"}),
    CDX("chemical/x-cdx", "cdx", new String[]{"cdx"}),
    CIF("chemical/x-cif", "cif", new String[]{"cif"}),
    CMDF("chemical/x-cmdf", "cmdf", new String[]{"cmdf"}),
    CML("chemical/x-cml", "cml", new String[]{"cml"}),
    CSML("chemical/x-csml", "csml", new String[]{"csml"}),
    XYZ("chemical/x-xyz", "xyz", new String[]{"xyz"}),
    CGM("image/cgm", "cgm", new String[]{"cgm"}),
    G3("image/g3fax", "g3", new String[]{"g3"}),
    IEF("image/ief", "ief", new String[]{"ief"}),
    KTX("image/ktx", "ktx", new String[]{"ktx"}),
    BTIF("image/prs.btif", "btif", new String[]{"btif"}),
    SGI("image/sgi", "sgi", new String[]{"sgi"}),
    DECE_GRAPHIC("image/vnd.dece.graphic", "dece-graphic", new String[]{"uvi", "uvvi", "uvg", "uvvg"}),
    SUB("image/vnd.dvb.subtitle", "sub", new String[0]),
    DJVU("image/vnd.djvu", "djvu", new String[]{"djvu", "djv"}),
    DWG("image/vnd.dwg", "dwg", new String[]{"dwg"}),
    DXF("image/vnd.dxf", "dxf", new String[]{"dxf"}),
    FBS("image/vnd.fastbidsheet", "fbs", new String[]{"fbs"}),
    FPX("image/vnd.fpx", "fpx", new String[]{"fpx"}),
    FST("image/vnd.fst", "fst", new String[]{"fst"}),
    MMR("image/vnd.fujixerox.edmics-mmr", "mmr", new String[]{"mmr"}),
    RLC("image/vnd.fujixerox.edmics-rlc", "rlc", new String[]{"rlc"}),
    MDI("image/vnd.ms-modi", "mdi", new String[]{"mdi"}),
    WDP("image/vnd.ms-photo", "wdp", new String[]{"wdp"}),
    NPX("image/vnd.net-fpx", "npx", new String[]{"npx"}),
    WBMP("image/vnd.wap.wbmp", "wbmp", new String[]{"wbmp"}),
    XIF("image/vnd.xiff", "xif", new String[]{"xif"}),
    WEBP("image/webp", "webp", new String[]{"webp"}),
    RAS("image/x-cmu-raster", "ras", new String[]{"ras"}),
    CMX("image/x-cmx", "cmx", new String[]{"cmx"}),
    FREEHAND("image/x-freehand", "freehand", new String[]{"fh", "fhc", "fh4", "fh5", "fh7"}),
    SID("image/x-mrsid-image", "sid", new String[]{"sid"}),
    PCX("image/x-pcx", "pcx", new String[]{"pcx"}),
    PICT("image/x-pict", "pict", new String[]{"pic", "pct"}),
    PNM("image/x-portable-anymap", "pnm", new String[]{"pnm"}),
    RGB("image/x-rgb", "rgb", new String[]{"rgb"}),
    TGA("image/x-tga", "tga", new String[]{"tga"}),
    XBM("image/x-xbitmap", "xbm", new String[]{"xbm"}),
    XPM("image/x-xpixmap", "xpm", new String[]{"xpm"}),
    XWD("image/x-xwindowdump", "xwd", new String[]{"xwd"}),
    IGES("model/iges", "iges", new String[]{"igs", "iges"}),
    MESH("model/mesh", "mesh", new String[]{"msh", "mesh", "silo"}),
    DAE("model/vnd.collada+xml", "dae", new String[]{"dae"}),
    DWF("model/vnd.dwf", "dwf", new String[]{"dwf"}),
    GDL("model/vnd.gdl", "gdl", new String[]{"gdl"}),
    GTW("model/vnd.gtw", "gtw", new String[]{"gtw"}),
    MTS("model/vnd.mts", "mts", new String[]{"mts"}),
    VTU("model/vnd.vtu", "vtu", new String[]{"vtu"}),
    X3D_BINARY("model/x3d+binary", "x3d-binary", new String[]{"x3db", "x3dbz"}),
    X3D_VRML("model/x3d+vrml", "x3d-vrml", new String[]{"x3dv", "x3dvz"}),
    X3D_XML("model/x3d+xml", "x3d-xml", new String[0]),
    CALENDAR("text/calendar", "calendar", new String[]{"ics", "ifb"}),
    CSS("text/css", "css", new String[]{"css"}),
    CSV("text/csv", "csv", new String[]{"csv"}),
    N3("text/n3", "n3", new String[]{"n3"}),
    TEXT("text/plain", "text", new String[]{"txt", "text"}),
    DSC("text/prs.lines.tag", "dsc", new String[]{"dsc"}),
    RTX("text/richtext", "rtx", new String[]{"rtx"}),
    SGML("text/sgml", "sgml", new String[]{"sgml", "sgm"}),
    TSV("text/tab-separated-values", "tsv", new String[]{"tsv"}),
    TTL("text/turtle", "ttl", new String[]{"ttl"}),
    CURL("text/vnd.curl", "curl", new String[]{"curl"}),
    DCURL("text/vnd.curl.dcurl", "dcurl", new String[]{"dcurl"}),
    SCURL("text/vnd.curl.scurl", "scurl", new String[]{"scurl"}),
    MCURL("text/vnd.curl.mcurl", "mcurl", new String[]{"mcurl"}),
    DVB_SUBTITLE("text/vnd.dvb.subtitle", "dvb-subtitle", new String[]{"sub"}),
    FLY("text/vnd.fly", "fly", new String[]{"fly"}),
    FLX("text/vnd.fmi.flexstor", "flx", new String[]{"flx"}),
    GV("text/vnd.graphviz", "gv", new String[]{"gv"}),
    SPOT("text/vnd.in3d.spot", "spot", new String[]{"spot"}),
    JAD("text/vnd.sun.j2me.app-descriptor", "jad", new String[]{"jad"}),
    WML("text/vnd.wap.wml", "wml", new String[]{"wml"}),
    WMLS("text/vnd.wap.wmlscript", "wmls", new String[]{"wmls"}),
    ASSEMBLY("text/x-asm", "assembly", new String[]{"s asm"}),
    C_SOURCE("text/x-c", "c-source", new String[]{"c", "cc", "cxx", "cpp", "h", "hh", "dic"}),
    JAVA("text/x-java-source", "java", new String[]{"java"}),
    OPML("text/x-opml", "opml", new String[]{"opml"}),
    PASCAL("text/x-pascal", "pascal", new String[]{"p", "pas"}),
    NFO("text/x-nfo", "nfo", new String[]{"nfo"}),
    ETX("text/x-setext", "etx", new String[]{"etx"}),
    SFV("text/x-sfv", "sfv", new String[]{"sfv"}),
    UU("text/x-uuencode", "uu", new String[]{"uu"}),
    VCS("text/x-vcalendar", "vcs", new String[]{"vcs"}),
    THREE_GP("video/3gpp", "3gp", new String[]{"3gp"}),
    THREE_G2("video/3gpp2", "3g2", new String[]{"3g2"}),
    H261("video/h261", "h261", new String[]{"h261"}),
    H263("video/h263", "h263", new String[]{"h263"}),
    JPGV("video/jpeg", "jpgv", new String[]{"jpgv"}),
    JPM("video/jpm", "jpm", new String[]{"jpm", "jpgm"}),
    MJ2("video/mj2", "mj2", new String[]{"mj2", "mjp2"}),
    OGV("video/ogg", "ogv", new String[]{"ogv"}),
    DECE_HD("video/vnd.dece.hd", "dece-hd", new String[]{"uvh", "uvvh"}),
    DECE_MOBILE("video/vnd.dece.mobile", "dece-mobile", new String[]{"uvm", "uvvm"}),
    DECE_PD("video/vnd.dece.pd", "dece-pd", new String[]{"uvp", "uvvp"}),
    DECE_SD("video/vnd.dece.sd", "dece-sd", new String[]{"uvs", "uvvs"}),
    DECE_VIDEO("video/vnd.dece.video", "dece-video", new String[]{"uvv", "uvvv"}),
    DVB("video/vnd.dvb.file", "dvb", new String[]{"dvb"}),
    FVT("video/vnd.fvt", "fvt", new String[]{"fvt"}),
    MPEG_URL("video/vnd.mpegurl", "mpeg-url", new String[]{"mxu", "m4u"}),
    PYV("video/vnd.ms-playready.media.pyv", "pyv", new String[]{"pyv"}),
    UVVU_MP4("video/vnd.uvvu.mp4", "uvvu-mp4", new String[]{"uvu", "uvvu"}),
    VIV("video/vnd.vivo", "viv", new String[]{"viv"}),
    WEBM("video/webm", "webm", new String[]{"webm"}),
    F4V("video/x-f4v", "f4v", new String[]{"f4v"}),
    FLI("video/x-fli", "fli", new String[]{"fli"}),
    M4V("video/x-m4v", "m4v", new String[]{"m4v"}),
    MATROSKA("video/x-matroska", "matroska", new String[]{"mkv", "mk3d", "mks"}),
    MICROSOFT_ASF("video/x-ms-asf", "asf", new String[]{"asf", "asx"}),
    VOB("video/x-ms-vob", "vob", new String[]{"vob"}),
    WM("video/x-ms-wm", "wm", new String[]{"wm"}),
    WMV("video/x-ms-wmv", "wmv", new String[]{"wmv"}),
    WMX("video/x-ms-wmx", "wmx", new String[]{"wmx"}),
    WVX("video/x-ms-wvx", "wvx", new String[]{"wvx"}),
    MOVIE("video/x-sgi-movie", "movie", new String[]{"movie"}),
    SMV("video/x-smv", "smv", new String[]{"smv"}),
    ICE("x-conference/x-cooltalk", "ice", new String[]{"ice"}),
    HBS("text/x-handlebars-template", "hbs", new String[]{"hbs"}),
    AMR("audio/amr", "amr", new String[]{"amr"}),
    EMPTY("application/octet-stream", "other", new String[0]),
    OTHER("application/octet-stream", "other", new String[0]);

    private final String mimeType;
    private final String simpleName;
    private final String[] fileExtensions;
    private static final Map<String, ContentType> mimeTypeMap = new HashMap();
    private static final Map<String, ContentType> fileExtensionMap = new HashMap();

    static {
        ContentType[] types = values();
        for (ContentType type : types) {
            if (type.mimeType != null) {
                mimeTypeMap.put(type.mimeType.toLowerCase(), type);
            }
            if (type.fileExtensions != null) {
                for (String fileExtension : type.fileExtensions) {
                    fileExtensionMap.put(fileExtension, type);
                }
            }
        }
    }

    ContentType(String mimeType, String simpleName, String[] fileExtensions) {
        this.mimeType = mimeType;
        this.simpleName = simpleName;
        this.fileExtensions = fileExtensions;
    }

    public static ContentType fromFileExtension(String fileExtension) {
        ContentType type = fileExtensionMap.get(fileExtension.toLowerCase());
        if (type != null) {
            return type;
        }
        int index = fileExtension.lastIndexOf(46);
        if (index >= 0 && index != fileExtension.length() - 1) {
            return fileExtensionMap.get(fileExtension.substring(index + 1));
        } else {
            return null;
        }
    }

    public String getMimeType() {
        return mimeType;
    }

    public String getSimpleName() {
        return simpleName;
    }

    public String[] getFileExtensions() {
        return fileExtensions;
    }
}
